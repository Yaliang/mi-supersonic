#%RAML 0.8
title: Steroids Data
mediaType: application/json
baseUri: https://rest-api.appgyver.com/v1/

traits:
  - securedBySteroidsApiKey:
      headers:
        steroidsApiKey:
          type: string
          example: exampleapikey
          default: ea2a2fb2e9ec76cc1ae280947545f27233b2d0074f27f919db0b4e2a8de2d2de
        steroidsAppId:
          type: integer
          example: 1234
          default: 55368

schemas:
  - User_collection: '{"$schema":"http://json-schema.org/schema","title":"User collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}}}}'
  - User_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}'
  - Chat_collection: '{"$schema":"http://json-schema.org/schema","title":"Chat collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Chat representation","properties":{"createdAt":{"type":"string"},"groupId":{"type":"string"},"hidden":{"type":"boolean"},"objectId":{"type":"string"},"ownerId":{"type":"string"},"unreadNum":{"type":"integer"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Chat_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Chat representation","properties":{"createdAt":{"type":"string"},"groupId":{"type":"string"},"hidden":{"type":"boolean"},"objectId":{"type":"string"},"ownerId":{"type":"string"},"unreadNum":{"type":"integer"},"updatedAt":{"type":"string"}},"required":[]}'
  - Comment_collection: '{"$schema":"http://json-schema.org/schema","title":"Comment collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Comment representation","properties":{"content":{"type":"string"},"createdAt":{"type":"string"},"eventId":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"ownerName":{"type":"string"},"replyToUserId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Comment_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Comment representation","properties":{"content":{"type":"string"},"createdAt":{"type":"string"},"eventId":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"ownerName":{"type":"string"},"replyToUserId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - Friend_collection: '{"$schema":"http://json-schema.org/schema","title":"Friend collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Friend representation","properties":{"createdAt":{"type":"string"},"friend":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"read":{"type":"boolean"},"updatedAt":{"type":"string"},"valid":{"type":"boolean"}},"required":[]}}}}'
  - Friend_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Friend representation","properties":{"createdAt":{"type":"string"},"friend":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"read":{"type":"boolean"},"updatedAt":{"type":"string"},"valid":{"type":"boolean"}},"required":[]}'
  - Group_collection: '{"$schema":"http://json-schema.org/schema","title":"Group collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Group representation","properties":{"createdAt":{"type":"string"},"memberId":{"type":"array"},"memberNum":{"type":"integer"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Group_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Group representation","properties":{"createdAt":{"type":"string"},"memberId":{"type":"array"},"memberNum":{"type":"integer"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - Message_collection: '{"$schema":"http://json-schema.org/schema","title":"Message collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Message representation","properties":{"createdAt":{"type":"string"},"groupId":{"type":"string"},"objectId":{"type":"string"},"senderId":{"type":"string"},"text":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Message_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Message representation","properties":{"createdAt":{"type":"string"},"groupId":{"type":"string"},"objectId":{"type":"string"},"senderId":{"type":"string"},"text":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - UserEvent_collection: '{"$schema":"http://json-schema.org/schema","title":"UserEvent collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical UserEvent representation","properties":{"commentNumber":{"type":"integer"},"createdAt":{"type":"string"},"description":{"type":"string"},"interestNumber":{"type":"integer"},"location":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"reportNum":{"type":"integer"},"time":{"type":"string"},"title":{"type":"string"},"updatedAt":{"type":"string"},"visibility":{"type":"boolean"}},"required":[]}}}}'
  - UserEvent_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical UserEvent representation","properties":{"commentNumber":{"type":"integer"},"createdAt":{"type":"string"},"description":{"type":"string"},"interestNumber":{"type":"integer"},"location":{"type":"string"},"objectId":{"type":"string"},"owner":{"type":"string"},"reportNum":{"type":"integer"},"time":{"type":"string"},"title":{"type":"string"},"updatedAt":{"type":"string"},"visibility":{"type":"boolean"}},"required":[]}'
  - Photo_collection: '{"$schema":"http://json-schema.org/schema","title":"Photo collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Photo representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"userId":{"type":"string"}},"required":[]}}}}'
  - Photo_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Photo representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"userId":{"type":"string"}},"required":[]}'

resourceTypes:
  - dolan_db_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "objects"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_collection # e.g cars
      post:
        description: |
          {
            "action": "create",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car

  - dolan_db_member:
      usage: This resourceType should be used for any built.io item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car
      put:
        description: |
          {
            "action": "update",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:

  - parse_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "results"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_collection # e.g cars
      post:
        description: |
          {
            "action": "create"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car

  - parse_member:
      usage: This resourceType should be used for any parse item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car
      put:
        description: |
          {
            "action": "update"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:


/User:
  description: |
    {
      "resourceName": "User",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Chat:
  description: |
    {
      "resourceName": "Chat",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Comment:
  description: |
    {
      "resourceName": "Comment",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Friend:
  description: |
    {
      "resourceName": "Friend",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Group:
  description: |
    {
      "resourceName": "Group",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Message:
  description: |
    {
      "resourceName": "Message",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/UserEvent:
  description: |
    {
      "resourceName": "UserEvent",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Photo:
  description: |
    {
      "resourceName": "Photo",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member


